# VENDOR AMD=1002 INTEL=8086 NVIDIA=10de
# CLASSID 03=Display controller
# 00=VGA compatible controller 02=3D controller 80=Display controller

# NVIDIA cards
#CLASSIDS="0300 0302"
#VENDORIDS="10de"
#DEVICEIDS=">/var/lib/mhwd/ids/pci/nvidia.ids"

# Intel Or Amd cards
#CLASSIDS="0300"
#VENDORIDS="8086 1002"
#DEVICEIDS="*"
#CONKMOD="nvidia-dkms"

[nvidia-dkms]
desc = 'Closed source NVIDIA drivers for Linux (Latest)'
nonfree = true
class_ids = "0300 0380 0302"
vendor_ids = "10de"
priority = 10
packages = 'nvidia-dkms nvidia-utils egl-wayland nvidia-settings opencl-nvidia lib32-opencl-nvidia lib32-nvidia-utils libva-nvidia-driver vulkan-icd-loader lib32-vulkan-icd-loader'
device_ids = ">/var/lib/mhwd/ids/pci/nvidia.ids"

[nvidia-dkms.470xx]
desc = 'Closed source NVIDIA drivers for Linux (470xx branch, only for Kepler GPUs)'
priority = 9
packages = 'nvidia-470xx-dkms nvidia-470xx-utils nvidia-470xx-settings opencl-nvidia-470xx vulkan-icd-loader lib32-nvidia-470xx-utils lib32-opencl-nvidia-470xx lib32-vulkan-icd-loader'
device_ids = ">/var/lib/mhwd/ids/pci/nvidia-470xx.ids"

[nvidia-dkms.390xx]
desc = 'Closed source NVIDIA drivers for Linux (390xx branch, only for Fermi GPUs)'
priority = 8
packages = 'nvidia-390xx-dkms nvidia-390xx-utils nvidia-390xx-settings opencl-nvidia-390xx nvidia-390xx-utils nvidia-390xx-settings opencl-nvidia-390xx lib32-nvidia-390xx-utils lib32-opencl-nvidia-390xx'
device_ids = ">/var/lib/mhwd/ids/pci/nvidia-390xx.ids"

[nouveau]
desc = "Open Nouveau driver for NVIDIA graphics cards (Only for old GPUs)"
nonfree = false
class_ids = "0300 0302"
vendor_ids = "10de"
priority = 0
packages = 'mesa lib32-mesa libva-mesa-driver mesa-vdpau lib32-libva-mesa-driver opencl-mesa libva-vdpau-driver lib32-libva-vdpau-driver'

[intel]
desc = "Mesa open source driver for Intel"
nonfree = false
class_ids = "0300 0302"
vendor_ids = "8086"
device_ids = "*"
priority = 4
packages = 'mesa lib32-mesa libva-intel-driver lib32-libva-intel-driver opencl-mesa vulkan-intel lib32-vulkan-intel intel-media-driver mesa-vdpau lib32-mesa-vdpau'

[amd]
desc = "Mesa open source driver for AMD"
nonfree = false
class_ids = "0300 0302"
vendor_ids = "1002"
device_ids = "*"
priority = 4
packages = 'xf86-video-amdgpu mesa lib32-mesa opencl-mesa vulkan-radeon lib32-vulkan-radeon libva-mesa-driver lib32-libva-mesa-driver mesa-vdpau lib32-mesa-vdpau'

[fallback]
desc = 'Fallback profile'
nonfree = false
class_ids = "0300 0380 0302"
vendor_ids = "1002 8086 10de"
device_ids = "*"
priority = 3
packages = 'mesa lib32-mesa vulkan-swrast xf86-video-vesa'

[virtualmachine]
desc = 'X.org vmware video driver and open-vm-tools/virtualbox tools'
nonfree = false
class_ids = "0300"
# Virtualbox version 6.0 uses VMSVGA on Linux guests by default, which has VMWare's VENDORID.
# VENDOR VMWare=80ee Virtualbox=15AD Redhat(QXL)=1af4 Redhat(VirtIO)=1b36 cirrus=1013
vendor_ids = "80ee 15AD 1af4 1b36 1013"
device_ids = "*"
priority = 5
packages = 'virtualbox-guest-utils xf86-video-vmware open-vm-tools xf86-input-vmmouse spice-vdagent qemu-guest-agent vulkan-virtio gtkmm3'
post_install = """
    if [[ "$(systemd-detect-virt)" == "oracle" ]]; then
        # Virtualbox detected

        # Load kernel modules and sync clock
        systemctl enable --now --no-block vboxservice.service
    else

        if [[ "$(systemd-detect-virt)" == "vmware" ]]; then
            # Vmware detected
            systemctl enable --now --no-block vmtoolsd.service
        else
            sed -i 's/MODULES=.*/MODULES=(virtio virtio_blk virtio_pci virtio_net)/g' /etc/mkinitcpio.conf
            mkinitcpio -P
        fi
    fi
    if [[ -e /etc/gdm/custom.conf ]]; then
        sed -i -e 's|#WaylandEnable=false|WaylandEnable=false|g' /etc/gdm/custom.conf
    fi"""
post_remove = """
    if [[ "$(systemd-detect-virt)" == "oracle" ]]; then
        # Virtualbox detected
        systemctl disable --now vboxservice.service
    elif [[ "$(systemd-detect-virt)" == "vmware" ]]; then
        # Vmware detected
        systemctl disable --now vmtoolsd.service
    else
        sed -i 's/MODULES=.*/MODULES=()/g' /etc/mkinitcpio.conf
        mkinitcpio -P
    fi"""
